@import 'variables';

.minos {
	@include pc {
		@include setSize($sizeOfMino-pc, $sizeOfMino-pc);
	}
	@include touch {
		@include setSize($sizeOfMino, $sizeOfMino);
	}

	border-top: 1px solid white;
	border-left: 1px solid white;

	grid-row: calc(attr(data-y) - 2);
	grid-column: calc(attr(data-x));
}

.emptyMinos {
	background-color: #0b1013;
}

.iMinos {
	background-color: #348fca;
}

.oMinos {
	background-color: #e7bd22;
}

.sMinos {
	background-color: #2aa55d;
}

.zMinos {
	background-color: #da4b3c;
}

.jMinos {
	background-color: #246eab;
}

.lMinos {
	background-color: #dc7a23;
}

.tMinos {
	background-color: #824597;
}

.wallMinos {
	background-color: gray;
}

.ghostMinos {
	background-color: #0b1013;
}
.ghostMinos {
	content: '';
	height: 50%;
	width: 50%;
	position: relative;
	top: 25%;
	left: 25%;
}

.iGhostMinos {
	background-color: #348fca;
}

.oGhostMinos {
	background-color: #e7bd22;
}

.sGhostMinos {
	background-color: #2aa55d;
}

.zGhostMinos {
	background-color: #da4b3c;
}

.jGhostMinos {
	background-color: #246eab;
}

.lGhostMinos {
	background-color: #dc7a23;
}

.tGhostMinos {
	background-color: #824597;
}

.displayers {
	display: grid;

	@include pc {
		@include setGrid(repeat(4, $sizeOfDisplayedMino-pc), repeat(2, $sizeOfDisplayedMino-pc));
	}
	@include touch {
		@include setGrid(repeat(4, $sizeOfDisplayedMino), repeat(2, $sizeOfDisplayedMino));
	}

	//grid-template-columns: repeat(4, $sizeOfDisplayedMino);
	//grid-template-rows: repeat(2, $sizeOfDisplayedMino);
}
.displayers .minos {
	@include pc {
		@include setSize($sizeOfDisplayedMino-pc, $sizeOfDisplayedMino-pc);
	}

	@include touch {
		@include setSize($sizeOfDisplayedMino, $sizeOfDisplayedMino);
	}
}
